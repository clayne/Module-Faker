#!perl
use v5.36.0;
# PODNAME: module-blaster
# ABSTRACT: create a random distribution

use lib 'lib';

use Data::Fake qw(Core Dates Names Text);
use Getopt::Long::Descriptive;
use List::Util qw(uniq);
use Module::Faker::Dist;

use lib 'nonsense';
use Meta qw(fake_cpan_author fake_license fake_version);
use Vocab qw(noun adj);

my ($opt, $usage) = describe_options(
  '%c %o',
  [ 'number|n=i', 'how many dists to blast out', { default => 1 } ],
);

my sub make_identifier ($str) {
  my @bits = split /[^A-Za-z0-9_]/, $str;
  join q{}, map {; ucfirst } @bits;
}

my sub package ($name) {
  state $config = {
    layout => {
      pkgword => fake_weighted(
        [ package => 4 ],
        [ class   => 1 ],
        [ role    => 1 ],
      )->(),
      style   => fake_pick(qw( statement block ))->(),
      version => fake_pick(qw( our our-literal inline ))->(),
    },
  };

  return $name => $config;
}

for my $n (1 .. $opt->number) {
  my @base = map { make_identifier( noun() ) } (1 .. fake_int(1,2)->());
  my $distname = join q{-}, @base;
  my $mainmod  = join q{::}, @base;

  my $author  = fake_cpan_author()->();

  my @adjs = uniq map {; make_identifier( adj() ) } (1 .. fake_int(0,5)->());

  my $ext = fake_weighted(
    [ 'tar.gz' => 4 ],
    [ zip      => 1 ],
  )->();

  my $dist = Module::Faker::Dist->from_struct({
    name    => $distname,
    version => fake_version()->(),
    authors     => [ $author->name_and_email ],
    cpan_author => $author->pauseid,
    license     => [ fake_license()->() ],
    archive_ext => $ext,
    packages    => [
      package($mainmod),
      map {; package("$mainmod\::$_") } sort @adjs,
    ],
  });

  my $archive = $dist->make_archive({ dir => '.' });
  say "Produced archive as $archive (cpan author: " . $author->pauseid . ")";
  say "- $_" for sort map {; $_->name } $dist->packages;
}
